# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17fX-ixGX5JZxX_V-3WsbyUsYY59EjBsq
"""

!pip install scipy==1.1.0

import numpy as np 
from scipy.misc import imresize
import cv2
from  moviepy.editor import VideoFileClip
from keras.models import load_model

model=load_model('/content/drive/MyDrive/model (1).h5')

class Lanes():
  def __init__(self):
    self.recent_fit=[]
    self.avrg_fit=[]

def road_lines(image):
  small_img=imresize(image,(80,160,3))
  small_img=np.array(small_img)
  small_img=small_img[None,:,:,:]

  pred=model.predict(small_img)[0]*255
  Lanes.recent_fit.append(pred)
  
  if len(Lanes.recent_fit) >5:
    Lanes.recent_fit=Lanes.recent_fit[1:]
 
  Lanes.avrg_fit=np.mean(np.array([i for i in Lanes.recent_fit]),axis=0)
  blanks=np.zeros_like(Lanes.avrg_fit).astype(np.uint8)
  lane_drow=np.dstack((blanks,Lanes.avrg_fit,blanks))
  lane_image=imresize(lane_drow,(720,1288,3))
  result=cv2.addWeighted(image,1,lane_image,1,0)
  return result

recent_fit=[]
avrg_fit=[]
def road_lines(image):
  global recent_fit,avrg_fit
  small_img=imresize(image,(80,160,3))
  small_img=np.array(small_img)
  small_img=small_img[None,:,:,:]

  pred=model.predict(small_img)[0]*255
  recent_fit.append(pred)
  
  if len(recent_fit) >5:
    recent_fit=recent_fit[1:]
 
  avrg_fit=np.mean(np.array([i for i in recent_fit]),axis=0)
  blanks=np.zeros_like(avrg_fit).astype(np.uint8)
  lane_drow=np.dstack((blanks,avrg_fit,blanks))
  lane_image=imresize(lane_drow,(720,1280,3))
  result=cv2.addWeighted(image,1,lane_image,1,0)
  return result

input_video=VideoFileClip('/content/lanes_clip.mp4')
video_output='Segmentation_lanes.mp4'

vid=input_video.fl_image(road_lines)
vid.write_videofile(video_output)